{"version":3,"file":"static/js/621.84904d1b.chunk.js","mappings":"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","sources":["Components/BannerCharacter.js","Components/BannerAd.js","Components/Banner.js","Components/Button.js","Components/ErrorBoundary.js","Components/ErrorMessage.js","Components/Comics.js","Pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js","../javascript/esm|F:/Melina/Projects/Udemy/004_JSReactCourse_part2_React/002_marvel-universe_app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../javascript/esm|F:/Melina/Projects/Udemy/004_JSReactCourse_part2_React/002_marvel-universe_app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../javascript/esm|F:/Melina/Projects/Udemy/004_JSReactCourse_part2_React/002_marvel-universe_app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../javascript/esm|F:/Melina/Projects/Udemy/004_JSReactCourse_part2_React/002_marvel-universe_app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../javascript/esm|F:/Melina/Projects/Udemy/004_JSReactCourse_part2_React/002_marvel-universe_app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../javascript/esm|F:/Melina/Projects/Udemy/004_JSReactCourse_part2_React/002_marvel-universe_app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../services/MarvelService';\r\nimport Spinner from './Spinner';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport Button from './Button';\r\n\r\nimport './BannerCharacter.scss';\r\n\r\nconst BannerCharacter = () => {\r\n  const [character, setCharacter] = useState({});\r\n  const { loading, error, getAllCharacters, getCharacter, clearError } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateCharacter();\r\n\r\n    // const timerId = setInterval(updateCharacter, 60000);\r\n\r\n    // return () => {\r\n    //   clearInterval(timerId);\r\n    // }\r\n  }, []);\r\n\r\n  const onCharacterLoaded = (character) => {\r\n    setCharacter(character);\r\n  };\r\n\r\n  const updateCharacter = () => {\r\n    let charactersId = [];\r\n    let id;\r\n\r\n    clearError();\r\n\r\n    getAllCharacters().then((res) => {\r\n      res.forEach((item) => {\r\n        if (item.thumbnail !== 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n          charactersId.push(item.id);\r\n        }\r\n      });\r\n      id = charactersId.sort()[Math.floor(Math.random() * charactersId.length)];\r\n      getCharacter(id).then(onCharacterLoaded);\r\n    });\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error) ? <CharacterView {...character} /> : null;\r\n\r\n  return (\r\n    <div className=\"banner\">\r\n      <div className=\"col banner__random\">\r\n        <p className=\"banner__text\">Random character for today:</p>\r\n        <p className=\"banner__text\">Do you want to know him better?</p>\r\n      </div>\r\n      <div className=\"col banner__main\">\r\n        <div className=\"banner-character\">\r\n          {errorMessage}\r\n          {spinner}\r\n          {content}\r\n        </div>\r\n      </div>\r\n      <div className=\"col banner__try\">\r\n        <p className=\"banner__text\">Or choose another one</p>\r\n        <div className=\"banner__buttons\">\r\n          <Button\r\n            buttonClasses={'banner__button button--accent button--dark-bg'}\r\n            buttonName=\"Try it\"\r\n            onClick={updateCharacter}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CharacterView = (character) => {\r\n  let { name, description, thumbnail, homepage, wiki } = character;\r\n\r\n  if (!name) {\r\n    name = 'There is no name yet';\r\n  }\r\n\r\n  if (!description) {\r\n    description = 'There is no description yet';\r\n  }\r\n\r\n  if (description.length > 200) {\r\n    description = description.slice(0, 200) + '...';\r\n  }\r\n\r\n  if (!thumbnail) {\r\n    thumbnail = 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <img className=\"banner-character__img\" src={thumbnail} alt={name} width={200} height={200} />\r\n      <div className=\"banner-character__info\">\r\n        <h2 className=\"banner-character__name\">{name}</h2>\r\n        <p className=\"banner-character__description\">{description}</p>\r\n        <div className=\"banner-character__buttons\">\r\n          <Button\r\n            buttonClasses={'banner-character__button button--accent'}\r\n            buttonName=\"Homepage\"\r\n            buttonUrl={homepage}\r\n          />\r\n          <Button buttonClasses={'banner-character__button'} buttonName=\"Wiki\" buttonUrl={wiki} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BannerCharacter;","import bannerAddLeftImg from '../Img/avengers.png';\r\nimport bannerAddRightImg from '../Img/avengers_logo.png';\r\n\r\nimport './BannerAd.scss';\r\n\r\nconst BannerAd = (props) => {\r\n  return (\r\n    <div className=\"banner banner--ad\">\r\n      <img className=\"banner__img\" src={bannerAddLeftImg} alt=\"avengers\" width={152} height={100} />\r\n      <div className=\"banner__info\">\r\n        <h2 className=\"banner__text\">\r\n          New comics every week!\r\n          <br />\r\n          Stay tuned!\r\n        </h2>\r\n      </div>\r\n      <img className=\"banner__img\" src={bannerAddRightImg} alt=\"avengers logo\" width={133} height={100} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BannerAd;\r\n","import BannerCharacter from './BannerCharacter';\r\nimport BannerAd from './BannerAd';\r\n\r\nimport './Banner.scss';\r\n\r\nconst Banner = (props) => {\r\n  if (props.bannerCharacter) {\r\n    return <BannerCharacter />;\r\n  } else {\r\n    return <BannerAd />;\r\n  }\r\n};\r\n\r\nexport default Banner;\r\n","import './Button.scss';\r\n\r\nconst Button = (props) => {\r\n  const { buttonClasses, buttonName, buttonUrl, onClick, disabled, style, type } = props;\r\n\r\n  if (buttonUrl) {\r\n    return (\r\n      <a\r\n        className={'button ' + buttonClasses}\r\n        href={buttonUrl}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        disabled={disabled}\r\n        style={style}>\r\n        {buttonName}\r\n      </a>\r\n    );\r\n  } else {\r\n    return (\r\n      <button type={type ? type : \"button\"} className={'button ' + buttonClasses} onClick={onClick} disabled={disabled} style={style}>\r\n        {buttonName}\r\n      </button>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Button;\r\n","import { Component } from 'react';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import './ErrorMessage.scss';\r\nimport errorMsgImg from './ErrorMessage.png';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <div className=\"error-message\">\r\n      <img className=\"error-message__icon\" src={errorMsgImg} alt=\"error - try again later\" width={100} height={100} />\r\n      <p className=\"error-message__text\">something went wrong... try again later</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from './Button';\r\nimport useMarvelService from '../services/MarvelService';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport Spinner from './Spinner';\r\n\r\nimport './Comics.scss';\r\n\r\nconst Comics = (props) => {\r\n  const [comicsList, setComicsList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(0);\r\n  const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n  const { loading, error, getAllComics } = useMarvelService();\r\n  const itemRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    onRequestList();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onRequestList = (initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    getAllComics().then(onComicsListLoaded);\r\n  };\r\n\r\n  const onComicsListLoaded = (newComicsList) => {\r\n    let ended = false;\r\n    if (newComicsList.length < offset) {\r\n      ended = true;\r\n    }\r\n    setComicsList([...comicsList, ...newComicsList]);\r\n    setNewItemLoading((newItemLoading) => false);\r\n    setOffset((offset) => offset + 4);\r\n    setComicsEnded((comicsEnded) => ended);\r\n  };\r\n\r\n  const onFocusItem = (id) => {\r\n    itemRefs.current.forEach((item) => {\r\n      item.classList.remove('active');\r\n    });\r\n    itemRefs.current[id].classList.add('active');\r\n    itemRefs.current[id].focus();\r\n  };\r\n\r\n  const renderItems = (comicsList) => {\r\n    let items = comicsList.slice(0, offset).map((item, i) => {\r\n      return (\r\n        <li\r\n          className=\"comics__item\"\r\n          key={item.id}\r\n          tabIndex={0}\r\n          ref={(el) => (itemRefs.current[i] = el)}\r\n          onClick={() => {\r\n            onFocusItem(i);\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === ' ' || e.key === 'Enter') {\r\n              onFocusItem(i);\r\n            }\r\n          }}>\r\n          <Link to={`/comics/${item.id}`}>\r\n            <img className=\"comics__img\" src={item.thumbnail} alt={item.title} width={225} height={346} />\r\n            <h3 className=\"comics__title\">{item.title}</h3>\r\n            <p className=\"comics__price\">{item.price}</p>\r\n          </Link>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <ul className=\"comics__list\">{items}</ul>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const content = renderItems(comicsList);\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n\r\n  return (\r\n    <div className=\"comics\">\r\n      {content}\r\n      {errorMessage}\r\n      {spinner}\r\n      {content ? (\r\n        <Button\r\n          buttonClasses={'comics__button button--accent'}\r\n          buttonName=\"Load more\"\r\n          disabled={newItemLoading}\r\n          style={{ display: comicsEnded ? 'none' : 'block' }}\r\n          onClick={onRequestList}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comics;\r\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\r\n\r\nimport ErrorBoundary from '../Components/ErrorBoundary';\r\nimport Banner from '../Components/Banner';\r\nimport Comics from '../Components/Comics';\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <HelmetProvider>\r\n      <Helmet>\r\n        <title>Marvel Universe | ComicsPage</title>\r\n        <meta name=\"description\" content=\"Marvel Universe inform portal | ComicsPage\" />\r\n      </Helmet>\r\n      <div className=\"banners\">\r\n        <ErrorBoundary>\r\n          <Banner />\r\n        </ErrorBoundary>\r\n      </div>\r\n      <ErrorBoundary>\r\n        <Comics />\r\n      </ErrorBoundary>\r\n    </HelmetProvider>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError, process, setProcess } = useHttp();\r\n\r\n  const apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const apiKey = 'apikey=fdc3403625ab83ef45aae10672f12243';\r\n  // const apiKey = 'apikey=fdc372f12243';\r\n  let baseCharOffset = 0;\r\n  let baseComicOffset = 0;\r\n  let character = [];\r\n  let comics = [];\r\n\r\n  const getAllCharacters = async (limit = 100, offset = baseCharOffset) => {\r\n    const res = await request(`${apiBase}characters?offset=${offset}&limit=${limit}&${apiKey}`);\r\n\r\n    res.data.results.forEach((item) => {\r\n      baseCharOffset++;\r\n      if (item.thumbnail.path !== 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available') {\r\n        character.push(item);\r\n      }\r\n    });\r\n    return character.map(transformCharacter);\r\n  };\r\n\r\n  const getAllComics = async (limit = 100, offset = baseComicOffset) => {\r\n    const res = await request(\r\n      `${apiBase}comics?dateDescriptor=thisMonth&orderBy=issueNumber&limit=${limit}&offset=${offset}&${apiKey}`\r\n    );\r\n    res.data.results.forEach((item) => {\r\n      baseComicOffset++;\r\n      if (item.thumbnail.path !== 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available') {\r\n        comics.push(item);\r\n      }\r\n    });\r\n    return comics.map(transformComics);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${apiBase}characters/${id}?${apiKey}`);\r\n    return transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getCharacterByName = async (charName) => {\r\n    const res = await request(`${apiBase}characters?name=${charName}&${apiKey}`);\r\n    // return transformCharacter(res.data.results[0]);\r\n    return res.data.results.map(transformCharacter);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${apiBase}comics/${id}?${apiKey}`);\r\n    return transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const transformCharacter = (character) => {\r\n    return {\r\n      id: character.id,\r\n      name: character.name || 'Character',\r\n      description: character.description || 'There is no description',\r\n      thumbnail: character.thumbnail.path + '.' + character.thumbnail.extension,\r\n      homepage: character.urls[0].url,\r\n      wiki: character.urls[1].url,\r\n      comics: character.comics.items,\r\n    };\r\n  };\r\n\r\n  const transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || 'There is no description',\r\n      pageCount: comics.pageCount ? `${comics.pageCount} pages` : 'No information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || 'en-us',\r\n      price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    process,\r\n    setProcess,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getCharacterByName,\r\n    clearError,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [process, setProcess] = useState('waiting');\r\n\r\n  const request = useCallback(\r\n    async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n      setLoading(true);\r\n      setProcess('loading');\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n        // setProcess('confirmed');\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        setProcess('error');\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n    setProcess('loading');\r\n  }, []);\r\n\r\n  return { loading, request, error, clearError, process, setProcess };\r\n};\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["CharacterView","character","name","description","thumbnail","homepage","wiki","length","slice","className","src","alt","width","height","Button","buttonClasses","buttonName","buttonUrl","useState","setCharacter","useMarvelService","loading","error","getAllCharacters","getCharacter","clearError","useEffect","updateCharacter","onCharacterLoaded","id","charactersId","then","res","forEach","item","push","sort","Math","floor","random","errorMessage","ErrorMessage","spinner","Spinner","content","onClick","props","bannerAddLeftImg","bannerAddRightImg","bannerCharacter","disabled","style","type","href","target","rel","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","errorMsgImg","comicsList","setComicsList","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","getAllComics","itemRefs","useRef","onRequestList","initial","onComicsListLoaded","newComicsList","ended","onFocusItem","current","classList","remove","add","focus","items","map","i","tabIndex","ref","el","onKeyPress","e","key","to","title","price","renderItems","display","Banner","setLoading","setError","process","setProcess","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","useHttp","apiBase","apiKey","baseCharOffset","baseComicOffset","comics","limit","results","path","transformCharacter","transformComics","getCharacterByName","charName","getComic","extension","urls","pageCount","language","textObjects","prices","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","arguments","source","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}